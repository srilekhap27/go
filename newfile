I wanted to confirm my understanding of the task and ask a few clarifying questions to ensure everything is on track.

What I Understand:
We need to develop two Lambda functions as part of the ADMIN service:

Get Documents by Batch ID:

Endpoint: /admin/documents/batches/{batchID}
This will use the BLK_BTCH_ID-PK-idx Global Secondary Index (GSI) on the documents-table to fetch all documents linked to the given Batch ID.
The GSI only includes item keys, so additional metadata or columns wonâ€™t be available directly.
Get Documents by Document GUID:

Endpoint: /admin/documents/{guid}
This will use the DOC-GUID-PK-idx GSI on the documents-table to fetch documents based on their GUID.
Similar to the Batch ID GSI, only keys are returned, and no extra data/columns are included.
The goal seems to be focused on fetching document keys and metadata based on these identifiers.

Questions:
GSI Clarification:

I understand that a GSI (Global Secondary Index) is a way to query DynamoDB tables using an alternate key. Can you confirm this understanding, and is there anything else I should know about how the GSIs work in this context?
Metadata Retrieval:

Since the GSIs only return keys, is there a separate table or process planned for fetching metadata? How should this be handled?
Batch Size Limitations:

Are there any restrictions on the number of documents a batch can contain? Do we need to handle large data volumes for this?
API Logic:

Should we also be creating the API logic for these endpoints, or is it expected that the Lambda functions will directly interact with the documents-table and handle everything?
Error Handling:

What is the expected behavior if the requested Batch ID or GUID does not exist in the database?
