import { useApi } from '../hooks/APIHook'; // Ensure this path is correct

jest.mock('../hooks/APIHook', () => ({
    useApi: jest.fn(),
}));

it('should log an error when response array length is less than 2', async () => {
    const mockRetrieveDocument = jest.fn().mockResolvedValueOnce([{}]); // Mock response

    useApi.mockReturnValue({
        retrieveDocument: mockRetrieveDocument, // Mock the function inside the API instance
    });

    const { getByTestId } = render(
        <Provider store={store}>
            <DocumentList />
        </Provider>
    );

    fireEvent.click(getByTestId('readDoc-0'));

    await waitFor(() => {
        expect(mockRetrieveDocument).toHaveBeenCalledTimes(1); // Ensure API call happened
        expect(handleErrorAndLog).toHaveBeenCalledWith(
            null,
            expect.any(String), // affectedFunction
            'Failed to retrieve document contents to view',
            Severity.ERROR
        );
    });
});
